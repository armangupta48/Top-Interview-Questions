131. Palindrome Partitioning
Medium

3181

101

Add to List

Share
Given a string s, partition s such that every substring of the partition is a palindrome. Return all possible palindrome partitioning of s.

A palindrome string is a string that reads the same backward as forward.

 

Example 1:

Input: s = "aab"
Output: [["a","a","b"],["aa","b"]]
Example 2:

Input: s = "a"
Output: [["a"]]
 

Constraints:

1 <= s.length <= 16
s contains only lowercase English letters.



class Solution {
public:
    vector<vector<string>> partition(string s) {
        vector<vector<string>> res;
        vector<string> curr;
        helper(res,curr,0,s);
        return res;
    }
    void helper(vector<vector<string>>& res,vector<string>& curr,int i,string &s)
    {
        if(i>=s.size())
        {
            res.push_back(curr);
            return;
        }
        for(int start =i;start<s.size();start++)
        {
            if(isvalid(s,i,start))
            {
                curr.push_back(s.substr(i,start-i+1));
                helper(res,curr,start+1,s);
                curr.pop_back();
            }
        }
    }
    bool isvalid(string &s, int low, int high) {
        while (low < high) {
            if (s[low++] != s[high--]) return false;
        }
        return true;
    }
};
